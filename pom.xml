<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.vic</groupId>
	<artifactId>user-parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<url>http://maven.apache.org</url>

	<!-- 三个项目聚合在一起，方便执行 -->
	<modules>
		<module>../user-core</module>
		<module>../user-log</module>
		<module>../user-service</module>
	</modules>

	<!-- 配置发布的url -->
	<distributionManagement>
		<repository>
			<id>user-releases</id>
			<name>user releases repo</name>
			<url>http://localhost:8083/repository/maven-releases/</url>
		</repository>
		<snapshotRepository>
			<id>user-snapshots</id>
			<name>user snapshots repo</name>
			<url>http://localhost:8083/repository/maven-snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<!-- 配置属性 -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<!-- 统一声明 -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.10</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-api</artifactId>
				<version>2.9.1</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12 -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>1.7.21</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<!-- 源码打包插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.2.1</version>
					<!-- 配置执行阶段 -->
					<executions>
						<execution>
							<phase>compile</phase>
							<!-- 在compile后执行jar,test-jar -->
							<goals>
								<goal>jar</goal>
								<goal>test-jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- 编译插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.7.0</version>
					<configuration>
						<verbose>true</verbose>
						<!-- <fork>true</fork> <executable>path-to-javac </executable> <compilerVersion>1.8</compilerVersion> -->
						<source>1.7</source>
						<target>1.7</target>
						<!-- 忽略测试类的编译错误 -->
						<!-- <skip>true</skip> -->
					</configuration>
				</plugin>

				<!-- rar插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-rar-plugin</artifactId>
					<version>2.4</version>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>rar</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<!-- <raXmlFile>src/resources/ra.xml</raXmlFile> -->
						<!-- 是否包括本身jar -->
						<includeJar>true</includeJar>
					</configuration>
				</plugin>

				<!-- 测试插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.20.1</version>
					<configuration>
						<!-- 默认执行 Test*** ***Test ***TestCase 所以此处配置要执行的测试类 -->
						<!-- <includes> <include>**/Hello*</include> </includes> -->

						<!-- 忽略以Test开关的测试类 -->
						<!-- <excludes> <exclude>Test*</exclude> </excludes> -->
						<!-- 跳过测试，但编译错误不会忽略，如果要忽略在compiler配置skip -->
						<!-- <skip>true</skip> -->
					</configuration>
				</plugin>
				
				<!-- 测试覆盖率报告 -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<configuration>
						<formats>
							<format>html</format>
							<format>xml</format>
						</formats>
					</configuration>
					<executions>
						<execution>
							<id>cobertura-report</id>
							<goals>
								<goal>cobertura</goal>
							</goals>
							<phase>test</phase>
						</execution>
					</executions>
				</plugin>

			</plugins>
		</pluginManagement>
	</build>
</project>